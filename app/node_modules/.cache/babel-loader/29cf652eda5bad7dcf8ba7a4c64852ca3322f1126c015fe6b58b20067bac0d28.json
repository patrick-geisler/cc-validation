{"ast":null,"code":"var _jsxFileName = \"/Users/patrickgeisler/Code/cc-validation/app/src/CreditCardValidator/CreditCardValidator.tsx\",\n  _s = $RefreshSig$();\nimport './Validator.css';\nimport { useState, useCallback } from 'react';\nimport CcLogo from './Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postData(ccNumber) {\n  const data = {\n    ccNumber: ccNumber\n  };\n  const response = await fetch(\"http://localhost:3100/validator\", {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.json();\n}\nfunction CreditCardValidator() {\n  _s();\n  const [validationRes, setValidationRes] = useState(null);\n  const [ccNumber, setCcNumber] = useState('');\n  const handleChange = event => {\n    // removes spaces before setting ccNumber state\n    const ccNumberValue = event.target.value.replace(/\\s+/g, '');\n    setCcNumber(ccNumberValue);\n    postData(ccNumberValue).then(data => {\n      setValidationRes(data);\n    });\n  };\n  const calculateUiStates = useCallback(() => {\n    if (validationRes !== null && validationRes !== void 0 && validationRes.isValid) {\n      return {\n        outline: `green solid`\n      };\n    } else if (!(validationRes !== null && validationRes !== void 0 && validationRes.isValid)) {\n      // checks for correct length before showing error\n      const values = (validationRes === null || validationRes === void 0 ? void 0 : validationRes.issuingBank) !== \"American Express\" ? [16, 19] : [15];\n      return {\n        outline: values.includes(ccNumber.length) ? `red solid` : ''\n      };\n    } else return {\n      outline: 'none'\n    };\n  }, [validationRes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreditCardValidator\",\n    style: calculateUiStates(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ccNumber\",\n      children: \"Input Credit Card Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Label\",\n      style: {\n        margin: '1em 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: v => {\n          handleChange(v);\n        },\n        type: \"text\",\n        id: \"ccNumber\",\n        name: \"ccNumber\"\n        // adds spaces before showing ccNumber\n        ,\n        value: ccNumber.replace(/\\W/gi, '').replace(/(.{4})/g, '$1 ').trim()\n        // allows for 19 char ccNumbers with 4 additional with spaces\n        ,\n        maxLength: 23,\n        placeholder: \"xxxx xxxx xxxx xxxx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CcLogo, {\n        issuingBank: validationRes === null || validationRes === void 0 ? void 0 : validationRes.issuingBank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !(validationRes !== null && validationRes !== void 0 && validationRes.isValid),\n      children: \" Pay Now \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CreditCardValidator, \"Ln68KY+jDsxWWpJX3PfcOaDK4Ns=\");\n_c = CreditCardValidator;\nexport default CreditCardValidator;\nvar _c;\n$RefreshReg$(_c, \"CreditCardValidator\");","map":{"version":3,"names":["useState","useCallback","CcLogo","jsxDEV","_jsxDEV","postData","ccNumber","data","response","fetch","method","headers","body","JSON","stringify","json","CreditCardValidator","_s","validationRes","setValidationRes","setCcNumber","handleChange","event","ccNumberValue","target","value","replace","then","calculateUiStates","isValid","outline","values","issuingBank","includes","length","className","style","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","margin","onChange","v","type","id","name","trim","maxLength","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/patrickgeisler/Code/cc-validation/app/src/CreditCardValidator/CreditCardValidator.tsx"],"sourcesContent":["import './Validator.css';\nimport { useState, useCallback  } from 'react';\nimport CcLogo from './Logo';\nimport { Banks } from './types';\n\n\ntype ValidatorResponse = {\n  isValid: boolean\n  issuingBank: Banks\n}\n\nasync function postData(ccNumber: string) {\n  const data = {\n    ccNumber: ccNumber\n  }\n  const response = await fetch(\"http://localhost:3100/validator\", {\n    method: \"POST\", \n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  });\n  return response.json(); \n}\n\n\n\nfunction CreditCardValidator() {\n  const [validationRes, setValidationRes] = useState<ValidatorResponse | null>(null);\n  const [ccNumber, setCcNumber] = useState<string>('')\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    // removes spaces before setting ccNumber state\n    const ccNumberValue = event.target.value.replace(/\\s+/g, '')\n    setCcNumber(ccNumberValue);\n\n    postData(ccNumberValue).then((data: ValidatorResponse) => {\n      setValidationRes(data)\n    }); \n  };\n\n  const calculateUiStates = useCallback(() => {\n    if (validationRes?.isValid){\n      return {\n        outline: `green solid`\n      }\n    } else if (!validationRes?.isValid){\n      // checks for correct length before showing error\n      const values = validationRes?.issuingBank !== \"American Express\" ? [16, 19] : [15]\n      return {\n        outline: values.includes(ccNumber.length) ? `red solid` : ''\n      }\n    } else return { outline: 'none' }\n  },[validationRes])\n\n  return (\n    <div className=\"CreditCardValidator\" style={calculateUiStates()}>\n      <label htmlFor={\"ccNumber\"}>Input Credit Card Number</label>\n      <div className=\"Label\" style={{margin: '1em 0'}}>\n        <input \n          onChange={(v)=>{handleChange(v)}}\n          type=\"text\" \n          id=\"ccNumber\" \n          name=\"ccNumber\"\n          // adds spaces before showing ccNumber\n          value={ccNumber.replace(/\\W/gi, '').replace(/(.{4})/g, '$1 ').trim()} \n          // allows for 19 char ccNumbers with 4 additional with spaces\n          maxLength={23}\n          placeholder=\"xxxx xxxx xxxx xxxx\"\n        /> \n        <CcLogo issuingBank={validationRes?.issuingBank}/>\n      </div>\n      <button  disabled={!validationRes?.isValid}> Pay Now </button>\n    </div>\n  );\n}\n\nexport default CreditCardValidator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}